FROM php:8.3.25-fpm-alpine3.22 AS php-base

RUN apk update && apk upgrade && apk add --no-cache \
    build-base \
    autoconf \
    make \
    gcc \
    g++ \
    libc-dev \
    file \
    re2c \
    git \
    curl \
    unzip \
    zip \
    libpng-dev \
    oniguruma-dev \
    libxml2-dev \
    linux-headers \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd sockets \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \
    && apk del build-base autoconf make gcc g++ libc-dev file re2c \
    && rm -rf /var/cache/apk/*

WORKDIR /var/www

FROM php-base AS vendor

COPY composer.json composer.lock ./
RUN composer install --no-dev --optimize-autoloader --no-scripts --ignore-platform-reqs

# Copy only necessary files for dependencies caching
COPY app/ ./app/
COPY bootstrap/ ./bootstrap/
COPY config/ ./config/
COPY database/ ./database/
COPY lang/ ./lang/
COPY public/ ./public/
COPY resources/ ./resources/
COPY routes/ ./routes/
COPY storage/ ./storage/
COPY artisan ./
COPY .env ./

RUN composer dump-autoload --optimize

FROM node:20.18.0-alpine3.20 AS node-build

WORKDIR /var/www

COPY package.json package-lock.json ./
RUN npm ci

# Copy only necessary files for building assets
COPY resources/ ./resources/
COPY public/ ./public/
COPY vite.config.js ./

RUN npm run build

FROM php-base AS app

WORKDIR /var/www

COPY --from=vendor /var/www /var/www
COPY --from=node-build /var/www/public/build /var/www/public/build

COPY docker/php/custom.ini /usr/local/etc/php/conf.d/custom.ini

RUN chown -R www-data:www-data /var/www \
    && chmod -R 755 /var/www \
    && chmod -R 775 /var/www/storage \
    && chmod -R 775 /var/www/bootstrap/cache

USER www-data

CMD ["php-fpm"]

FROM nginx:mainline-alpine3.22-perl AS web

WORKDIR /var/www

COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf
COPY --from=app /var/www/public /var/www/public
